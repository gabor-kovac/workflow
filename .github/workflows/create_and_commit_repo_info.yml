# ||||||||||||||||||||| NOTICE |||||||||||||||||||||||
# || Update this file together with st_trigger.yml! ||
# || Because of gollum trigger limitation, you need ||
# || to update these two files together !!          ||
# ||||||||||||||||||||||||||||||||||||||||||||||||||||
name: Update status tracker repository with current repository info
on:
  workflow_call:
    secrets:
      token:
        required: false
    # inputs:
    #   scanResult:
    #     type: string
    #     required: false
    #   lastScannedBranch:
    #     type: string
    #     required: false

permissions:
  contents: write
  pages: write
  id-token: write
        
jobs: 
  Update_Status_Tracker:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        sudo pip install yq
        
    - name: Check release branch exists
      id: check-branch-exists
      uses: GuillaumeFalourd/branch-exists@v1
      with:
        branch: release

    - name: Check for wiki
      id: check_wiki
      run: |
        WIKI_EXISTS=$(curl -s \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/${{ github.repository }}" | jq '.has_wiki')
        if [[ $WIKI_EXISTS == true ]]; then
          echo "The repository has a wiki."
          echo "WIKI_EXISTS=true" >> $GITHUB_ENV
        else
          echo "The repository does not have a wiki."
          echo "WIKI_EXISTS=false" >> $GITHUB_ENV
        fi
    
    - name: Checkout repository wiki
      if: env.WIKI_EXISTS == 'true'
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}.wiki
        path: wiki_temp_dir
        
    - name: Get and store wiki version
      if: env.WIKI_EXISTS == 'true'
      run: |
        echo "WIKI_VERSION=$(head -n 1 wiki_temp_dir/Home.md | grep -oP '(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?')" >> $GITHUB_ENV

    - name: Save input to env
      run: |
        echo "LAST_SCAN_RESULT=${{ inputs.scanResult }}" >> $GITHUB_ENV
        echo "LAST_SCANNED_BRANCH=${{ inputs.lastScannedBranch }}" >> $GITHUB_ENV

    - name: Echo scan result, last scanned branch
      run: |
        echo $LAST_SCAN_RESULT
        echo $LAST_SCANNED_BRANCH
    
    - name: Checkout Workflow-Process repository to get summary scripts
      uses: actions/checkout@v4
      with:
        repository: 'gabor-kovac/workflow'

    - name: Move and make scripts executable
      run: |
        mkdir /tmp/aux_scripts
        mv .github/workflows/status-tracker/* /tmp/aux_scripts/
        chmod +x /tmp/aux_scripts/*

    - name: Checkout local repository release branch
      if: steps.check-branch-exists.outputs.exists == 'true'
      uses: actions/checkout@v4
      with:
        ref: 'release'

    # This will skip RC list and version
    - name: Checkout local repository main branch
      if: steps.check-branch-exists.outputs.exists == 'false'
      uses: actions/checkout@v4
      with:
        ref: 'main'     
 
    - name: Run summary scripts save outputs to files
      timeout-minutes: 30
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mkdir /tmp/data
        bash /tmp/aux_scripts/repo_info.sh > /tmp/data/${{ github.event.repository.name }}.json &&
        echo "REPO_INFO_PATH=/tmp/data/${{ github.event.repository.name }}.json" >> $GITHUB_ENV &&
        bash /tmp/aux_scripts/tests_info.sh > /tmp/data/${{ github.event.repository.name }}-tests.json &&
        echo "REPO_TESTS_PATH=/tmp/data/${{ github.event.repository.name }}-tests.json" >> $GITHUB_ENV
        
    - name: Checkout StatusTracker repository
      uses: actions/checkout@v4
      with:
        repository: 'gabor-kovac/StatusTracker'
        ref: 'main'

    - name: Update repository summary files
      run: |
        cp ${{ env.REPO_INFO_PATH }} src/assets/repos/${{ github.event.repository.name }}.json &&
        cp ${{ env.REPO_TESTS_PATH }} src/assets/releases/${{ github.event.repository.name }}.json
    
    - name: Commit changes for repository file
      run: |
        git config --local user.email "gabor.kovac@ametek.com"
        git config --local user.name "gabor-kovac"
        git add src/assets/repos/${{ github.event.repository.name }}.json
        git add src/assets/releases/${{ github.event.repository.name }}.json
        git commit -m "Update ${{ github.event.repository.name }} summary files"
        
    - name: Push changes to StatusTracker repository
      uses: ad-m/github-push-action@master
      with:
        repository: gabor-kovac/StatusTracker
        branch: main
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true
